{"version":3,"sources":["defs.js","Utils.js","TodoFooter.js","TodoItem.js","TodoApp.js","index.js","TodoModel.js"],"names":["defs","ALL_TODOS","ACTIVE_TODOS","COMPLETED_TODOS","Utils","count","word","TodoFooter","_this$props","this","props","completedCount","nowShowing","onClearCompleted","clearButton","react_default","a","createElement","className","onClick","href","classNames","selected","React","Component","ESCAPE_KEY","ENTER_KEY","TodoItem","_this","Object","classCallCheck","_super","call","handleSubmit","event","onDestroy","onSave","val","state","editText","trim","setState","handleEdit","_this$props2","onEdit","todo","title","handleKeyDown","_this$props3","onCancel","which","handleChange","editing","target","value","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","node","editField","current","focus","setSelectionRange","length","createRef","_this$props4","onToggle","completed","type","checked","onChange","onDoubleClick","ref","onBlur","onKeyDown","history","createBrowserHistory","TodoApp","newTodo","handleNewTodoKeyDown","keyCode","preventDefault","model","addTodo","toggleAll","toggle","todoToToggle","destroy","edit","uid","save","todoToSave","text","cancel","clearCompleted","_this2","setNowShowingFn","routes","/","/active","/completed","processLocationHash","hash","substring","location","listen","action","_this3","todos","_this$state","todoItems","filter","map","TodoItem_TodoItem","key","activeTodoCount","reduce","accum","footer","TodoFooter_TodoFooter","main","id","htmlFor","placeholder","autoFocus","TodoModel","onChanges","subscribe","push","inform","forEach","cb","clientStub","dgraph","fetchAndInform","_callee","regenerator_default","wrap","_context","prev","next","fetchTodos","sent","freeze","stop","_callee2","res","_context2","newTxn","query","abrupt","data","_callee3","_context3","mutate","setJson","is_todo","commitNow","console","info","uids","t0","alert","error","finish","_callee4","toggleJson","_context4","_ref","_callee5","_context5","_callee6","_context6","deleteJson","_callee7","newTitle","_context7","_callee8","uidsToDelete","_context8","_ref2","_ref3","render","ReactDOM","TodoApp_TodoApp","document","getElementById"],"mappings":"+aAAeA,EAAA,CACXC,UAAW,MACXC,aAAc,SACdC,gBAAiB,8BCHNC,EACA,SAACC,EAAOC,GACjB,OAAiB,IAAVD,EAAcC,EAAOA,EAAO,8cCGpBC,oJACnB,WAAS,IAAAC,EACyDC,KAAKC,MAA7DC,EADDH,EACCG,eAAgBN,EADjBG,EACiBH,MAAOO,EADxBJ,EACwBI,WAAYC,EADpCL,EACoCK,iBACrCC,EAAiC,IAAnBH,EAChB,KAEAI,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVC,QAASN,GAFX,mBAOJ,OACEE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACdH,EAAAC,EAAAC,cAAA,cAASZ,GADX,IAC4BD,EAAgBC,EAAO,QADnD,SAGAU,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEG,KAAK,KACLF,UAAWG,IAAW,CAACC,SAAUV,IAAeZ,EAAKC,aAFvD,QAMD,IACDc,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEG,KAAK,WACLF,UAAWG,IAAW,CAACC,SAAUV,IAAeZ,EAAKE,gBAFvD,WAMD,IACDa,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEG,KAAK,cACLF,UAAWG,IAAW,CAACC,SAAUV,IAAeZ,EAAKG,mBAFvD,eAOHW,UA3C+BS,IAAMC,gdCF9C,IAAMC,EAAa,GACbC,EAAY,GAGGC,0CACnB,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAkB,IACjBC,EAAAG,EAAAC,KAAAvB,KAAMC,IASTuB,aAAe,SAAAC,GAAS,IAAA1B,EACSoB,EAAKlB,MAA3ByB,EADa3B,EACb2B,UAAWC,EADE5B,EACF4B,OACjBC,EAAMT,EAAKU,MAAMC,SAASC,OAC1BH,GACHD,EAAOC,GACPT,EAAKa,SAAS,CAACF,SAAUF,KAEzBF,KAjBkBP,EAqBpBc,WAAa,WAAM,IAAAC,EACSf,EAAKlB,MAAtBkC,EADQD,EACRC,OAAQC,EADAF,EACAE,KAClBD,IACAhB,EAAKa,SAAS,CAACF,SAAUM,EAAKC,SAxBXlB,EA2BpBmB,cAAgB,SAAAb,GAAS,IAAAc,EACKpB,EAAKlB,MAAxBuC,EADcD,EACdC,SAAUJ,EADIG,EACJH,KAChBX,EAAMgB,QAAUzB,GACnBG,EAAKa,SAAS,CAACF,SAAUM,EAAKC,QAC9BG,EAASf,IACCA,EAAMgB,QAAUxB,GAC1BE,EAAKK,aAAaC,IAjCAN,EAqCpBuB,aAAe,SAAAjB,GACVN,EAAKlB,MAAM0C,SACdxB,EAAKa,SAAS,CAACF,SAAUL,EAAMmB,OAAOC,SAvCpB1B,EAkDpB2B,sBAAwB,SAACC,EAAWC,GACnC,OACCD,EAAUX,OAASjB,EAAKlB,MAAMmC,MAC9BW,EAAUJ,UAAYxB,EAAKlB,MAAM0C,SACjCK,EAAUlB,WAAaX,EAAKU,MAAMC,UAtDhBX,EAgEpB8B,mBAAqB,SAAAC,GACpB,IAAKA,EAAUP,SAAWxB,EAAKlB,MAAM0C,QAAS,CAC7C,IAAMQ,EAAOhC,EAAKiC,UAAUC,QAC5BF,EAAKG,QACLH,EAAKI,kBAAkBJ,EAAKN,MAAMW,OAAQL,EAAKN,MAAMW,UAjEpDrC,EAAKU,MAAQ,CACXC,SAAUX,EAAKlB,MAAMmC,KAAKC,OAG5BlB,EAAKiC,UAAYtC,IAAM2C,YAPNtC,4CAwEpB,WAAS,IAAAuC,EACyC1D,KAAKC,MAA5C0C,EADFe,EACEf,QAASjB,EADXgC,EACWhC,UAAWiC,EADtBD,EACsBC,SAAUvB,EADhCsB,EACgCtB,KAC9BN,EAAa9B,KAAK6B,MAAlBC,SACV,OACCxB,EAAAC,EAAAC,cAAA,MAAIC,UAAWG,IAAW,CACzBgD,UAAWxB,EAAKwB,UAChBjB,aAEArC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,SACCC,UAAU,SACVoD,KAAK,WACLC,QAAS1B,EAAKwB,UACdG,SAAUJ,IAEXrD,EAAAC,EAAAC,cAAA,SAAOwD,cAAehE,KAAKiC,YACzBG,EAAKC,OAEP/B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUC,QAASgB,KAEtCpB,EAAAC,EAAAC,cAAA,SACCyD,IAAKjE,KAAKoD,UACV3C,UAAU,OACVoC,MAAOf,EACPoC,OAAQlE,KAAKwB,aACbuC,SAAU/D,KAAK0C,aACfyB,UAAWnE,KAAKsC,wBAnGiBxB,IAAMC,gdCA5C,IAAME,EAAY,GACZmD,EAAUC,cAEKC,oMACnBzC,MAAQ,CACN1B,WAAYZ,EAAKC,UACjBmD,QAAS,KACT4B,QAAS,MA2BX7B,aAAe,SAAAjB,GAAK,OAClBN,EAAKa,SAAS,CAAEuC,QAAS9C,EAAMmB,OAAOC,WAExC2B,qBAAuB,SAAA/C,GACrB,GAAIA,EAAMgD,UAAYxD,EAAtB,CAIAQ,EAAMiD,iBAEN,IAAM9C,EAAMT,EAAKU,MAAM0C,QAAQxC,OAE3BH,IACFT,EAAKlB,MAAM0E,MAAMC,QAAQhD,GACzBT,EAAKa,SAAS,CAAEuC,QAAS,UAI7BM,UAAY,SAAApD,GACV,IAAMqC,EAAUrC,EAAMmB,OAAOkB,QAC7B3C,EAAKlB,MAAM0E,MAAME,UAAUf,MAG7BgB,OAAS,SAAAC,GAAY,OACnB5D,EAAKlB,MAAM0E,MAAMG,OAAOC,MAE1BC,QAAU,SAAA5C,GAAI,OACZjB,EAAKlB,MAAM0E,MAAMK,QAAQ5C,MAE3B6C,KAAO,SAAA7C,GAAI,OACTjB,EAAKa,SAAS,CAAEW,QAASP,EAAK8C,SAEhCC,KAAO,SAACC,EAAYC,GAClBlE,EAAKlB,MAAM0E,MAAMQ,KAAKC,EAAYC,GAClClE,EAAKa,SAAS,CAAEW,QAAS,UAG3B2C,OAAS,kBACPnE,EAAKa,SAAS,CAAEW,QAAS,UAE3B4C,eAAiB,kBACfpE,EAAKlB,MAAM0E,MAAMY,yEAjEnB,WAAoB,IAAAC,EAAAxF,KACZyF,EAAkB,SAAAtF,GAAU,OAAI,kBAAMqF,EAAKxD,SAAS,CAAE7B,iBAEtDuF,EAAS,CACbC,IAAKF,EAAgBlG,EAAKC,WAC1BoG,UAAWH,EAAgBlG,EAAKE,cAChCoG,aAAcJ,EAAgBlG,EAAKG,kBAG/BoG,EAAsB,SAAAC,GACtBA,IACFA,EAAOA,EAAKC,UAAU,KAEVN,EAAOK,IAASL,EAAO,SAIvCI,EAAoB1B,EAAQ6B,SAASF,MAErC3B,EAAQ8B,OAAO,SAACD,EAAUE,GAAX,OACbL,EAAoBG,EAASF,8BA+CjC,WAAS,IAAAK,EAAApG,KACCqG,EAAUrG,KAAKC,MAAM0E,MAArB0B,MADDC,EAEsBtG,KAAK6B,MAA1Bc,EAFD2D,EAEC3D,QAAS4B,EAFV+B,EAEU/B,QAaXgC,EAXaF,EAAMG,OAAO,SAAApE,GAC9B,OAAQgE,EAAKvE,MAAM1B,YACjB,KAAKZ,EAAKE,aACR,OAAQ2C,EAAKwB,UACf,KAAKrE,EAAKG,gBACR,OAAO0C,EAAKwB,UACd,QACE,OAAO,KAIgB6C,IAAI,SAAArE,GAAI,OACnC9B,EAAAC,EAAAC,cAACkG,EAAD,CACEC,IAAKvE,EAAK8C,IACV9C,KAAMA,EACNuB,SAAU,kBAAMyC,EAAKtB,OAAO1C,IAC5BV,UAAW,kBAAM0E,EAAKpB,QAAQ5C,IAC9BD,OAAQ,kBAAMiE,EAAKnB,KAAK7C,IACxBO,QAASA,IAAYP,EAAK8C,IAC1BvD,OAAQ,SAAA0D,GAAI,OAAIe,EAAKjB,KAAK/C,EAAMiD,IAChC7C,SAAU4D,EAAKd,WAIbsB,EAAkBP,EAAMQ,OAAO,SAAUC,EAAO1E,GACpD,OAAOA,EAAKwB,UAAYkD,EAAQA,EAAQ,GACvC,GAEG5G,EAAiBmG,EAAM7C,OAASoD,EAEhCG,EAAUH,GAAmB1G,EAC/BI,EAAAC,EAAAC,cAACwG,EAAD,CACEpH,MAAOgH,EACP1G,eAAgBA,EAChBC,WAAYH,KAAK6B,MAAM1B,WACvBC,iBAAkBJ,KAAKuF,iBAEzB,KAEE0B,EAAQZ,EAAM7C,OAGhBlD,EAAAC,EAAAC,cAAA,WAASC,UAAU,QACjBH,EAAAC,EAAAC,cAAA,SACE0G,GAAG,aACHzG,UAAU,aACVoD,KAAK,WACLE,SAAU/D,KAAK6E,UACff,QAA6B,IAApB8C,IAEXtG,EAAAC,EAAAC,cAAA,SACE2G,QAAQ,eAEV7G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACX8F,IAdL,KAmBJ,OACEjG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SACEC,UAAU,WACV2G,YAAY,yBACZvE,MAAO0B,EACPJ,UAAWnE,KAAKwE,qBAChBT,SAAU/D,KAAK0C,aACf2E,WAAW,KAGdJ,EACAF,UAvJ4BjG,IAAMC,2CCHrC4D,EAAQ,eCJZ,SAAA2C,IAAc,IAAAnG,EAAAnB,KAAAoB,OAAAC,EAAA,EAAAD,CAAApB,KAAAsH,GAAAtH,KA8BfuH,UAAY,GA9BGvH,KAgCfwH,UAAY,SAAAzD,GAAQ,OACnB5C,EAAKoG,UAAUE,KAAK1D,IAjCN/D,KAmCf0H,OAAS,WACRvG,EAAKoG,UAAUI,QAAQ,SAAAC,GAAE,OAAIA,OAnC3B,IAAMC,EAAa,IAAIC,mBAAwB,yBAC/C9H,KAAK8H,OAAS,IAAIA,eAAoBD,GAEtC7H,KAAKqG,MAAQ,GACbrG,KAAK+H,yGAGP,SAAAC,IAAA,OAAAC,EAAA1H,EAAA2H,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBrI,KAAKsI,aAD1B,OACEtI,KAAKqG,MADP8B,EAAAI,KAGEvI,KAAKqG,MAAMsB,QAAQvG,OAAOoH,QAC1BpH,OAAOoH,OAAOxI,KAAKqG,OAEnBrG,KAAK0H,SANP,wBAAAS,EAAAM,SAAAT,EAAAhI,6HASA,SAAA0I,IAAA,IAAAC,EAAA,OAAAV,EAAA1H,EAAA2H,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,0HAAAO,EAAAP,KAAA,EASoBrI,KAAK8H,OAAOe,SAASC,MATzC,4HASQH,EATRC,EAAAL,KAAAK,EAAAG,OAAA,SAUSJ,EAAIK,KAAK3C,OAAS,IAV3B,wBAAAuC,EAAAH,SAAAC,EAAA1I,0HAsBA,SAAAiJ,EAAc5G,GAAd,IAAAsG,EAAA,OAAAV,EAAA1H,EAAA2H,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAEsBrI,KAAK8H,OAAOe,SAASM,OAAO,CAC5CC,QAAS,CACPlE,IAAK,YACLmE,SAAS,EACThH,QACAuB,WAAW,GAEb0F,WAAW,IATjB,OAEUX,EAFVO,EAAAX,KAYIgB,QAAQC,KAAK,4BAA6Bb,EAAIK,KAAKS,KAAKlF,SAZ5D2E,EAAAb,KAAA,gBAAAa,EAAAd,KAAA,EAAAc,EAAAQ,GAAAR,EAAA,SAcIS,MAAM,0BACNJ,QAAQK,MAAM,gBAAdV,EAAAQ,IAfJ,eAAAR,EAAAd,KAAA,GAiBIpI,KAAK+H,iBAjBTmB,EAAAW,OAAA,6BAAAX,EAAAT,SAAAQ,EAAAjJ,KAAA,sIAqBD,SAAA8J,EAAgBlG,GAAhB,IAAAmG,EAAA,OAAA9B,EAAA1H,EAAA2H,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAEW2B,EAAa/J,KAAKqG,MACnBI,IAAI,SAAAwD,GAAA,MAAc,CAAE/E,IAAhB+E,EAAG/E,IAAkBtB,eAHnCoG,EAAA3B,KAAA,EAKWrI,KAAK8H,OAAOe,SAASM,OAAO,CAChCC,QAASW,EACTT,WAAW,IAPlB,OAAAU,EAAA3B,KAAA,eAAA2B,EAAA5B,KAAA,EAAA4B,EAAAN,GAAAM,EAAA,SAUKT,QAAQK,MAAM,gBAAdI,EAAAN,IAVL,cAAAM,EAAA5B,KAAA,EAYKpI,KAAK+H,iBAZViC,EAAAH,OAAA,4BAAAG,EAAAvB,SAAAqB,EAAA9J,KAAA,kIAiBA,SAAAkK,EAAanF,GAAb,OAAAkD,EAAA1H,EAAA2H,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEWrI,KAAK8H,OAAOe,SAASM,OAAO,CAChCC,QAAS,CACPlE,IAAKH,EAAaG,IAClBtB,WAAYmB,EAAanB,WAE3B0F,WAAW,IAPlB,OAAAa,EAAA9B,KAAA,eAAA8B,EAAA/B,KAAA,EAAA+B,EAAAT,GAAAS,EAAA,SAUKZ,QAAQK,MAAM,gBAAdO,EAAAT,IAVL,cAAAS,EAAA/B,KAAA,EAYKpI,KAAK+H,iBAZVoC,EAAAN,OAAA,4BAAAM,EAAA1B,SAAAyB,EAAAlK,KAAA,mIAgBC,SAAAoK,EAAchI,GAAd,OAAA6F,EAAA1H,EAAA2H,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAjC,KAAA,EAAAiC,EAAAhC,KAAA,EAEUrI,KAAK8H,OAAOe,SAASM,OAAO,CAChCmB,WAAY,CACVpF,IAAK9C,EAAK8C,KAEZoE,WAAW,IANjB,OAAAe,EAAAhC,KAAA,eAAAgC,EAAAjC,KAAA,EAAAiC,EAAAX,GAAAW,EAAA,SASIV,MAAM,0BACNJ,QAAQK,MAAM,gBAAdS,EAAAX,IAVJ,cAAAW,EAAAjC,KAAA,EAYIpI,KAAK+H,iBAZTsC,EAAAR,OAAA,4BAAAQ,EAAA5B,SAAA2B,EAAApK,KAAA,gIAgBD,SAAAuK,EAAWnF,EAAYoF,GAAvB,OAAAvC,EAAA1H,EAAA2H,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAArC,KAAA,EAAAqC,EAAApC,KAAA,EAEWrI,KAAK8H,OAAOe,SAASM,OAAO,CAChCC,QAAS,CACPlE,IAAKE,EAAWF,IAChB7C,MAAOmI,GAETlB,WAAW,IAPlB,OAAAmB,EAAApC,KAAA,eAAAoC,EAAArC,KAAA,EAAAqC,EAAAf,GAAAe,EAAA,SAUKlB,QAAQK,MAAM,gBAAda,EAAAf,IAVL,cAAAe,EAAArC,KAAA,EAYKpI,KAAK+H,iBAZV0C,EAAAZ,OAAA,4BAAAY,EAAAhC,SAAA8B,EAAAvK,KAAA,4IAgBA,SAAA0K,IAAA,IAAAC,EAAA,OAAA1C,EAAA1H,EAAA2H,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAxC,KAAA,EAEWuC,EAAe3K,KAAKqG,MACrBG,OAAO,SAAAqE,GAAA,OAAAA,EAAGjH,YACV6C,IAAI,SAAAqE,GAAA,MAAc,CAAE5F,IAAhB4F,EAAG5F,OAJjB0F,EAAAvC,KAAA,EAMWrI,KAAK8H,OAAOe,SAASM,OAAO,CAChCmB,WAAYK,EACZrB,WAAW,IARlB,OAAAsB,EAAAvC,KAAA,gBAAAuC,EAAAxC,KAAA,EAAAwC,EAAAlB,GAAAkB,EAAA,SAWKjB,MAAM,0BACNJ,QAAQK,MAAM,gBAAdgB,EAAAlB,IAZL,eAAAkB,EAAAxC,KAAA,GAcKpI,KAAK+H,iBAdV6C,EAAAf,OAAA,6BAAAe,EAAAnC,SAAAiC,EAAA1K,KAAA,gFDvHD,SAAS+K,IACPC,IAASD,OACPzK,EAAAC,EAAAC,cAACyK,EAAD,CAAStG,MAAOA,IAChBuG,SAASC,eAAe,SAI5BxG,EAAM6C,UAAUuD,GAChBA","file":"static/js/main.fadabf41.chunk.js","sourcesContent":["export default {\n    ALL_TODOS: 'all',\n    ACTIVE_TODOS: 'active',\n    COMPLETED_TODOS: 'completed',\n  }","export default {\n    pluralize: (count, word) => {\n      return count === 1 ? word : word + 's';\n    },\n  }\n  ","import React from 'react'\nimport classNames from 'classnames'\nimport defs from './defs'\nimport Utils from './Utils'\n\nexport default class TodoFooter extends React.Component {\n  render() {\n    const { completedCount, count, nowShowing, onClearCompleted } = this.props\n    const clearButton = completedCount === 0\n      ? null\n      : (\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}>\n          Clear completed\n        </button>\n      )\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{count}</strong> {Utils.pluralize(count, 'item')} left\n        </span>\n        <ul className=\"filters\">\n          <li>\n            <a\n              href=\"#/\"\n              className={classNames({selected: nowShowing === defs.ALL_TODOS})}>\n                All\n            </a>\n          </li>\n          {' '}\n          <li>\n            <a\n              href=\"#/active\"\n              className={classNames({selected: nowShowing === defs.ACTIVE_TODOS})}>\n                Active\n            </a>\n          </li>\n          {' '}\n          <li>\n            <a\n              href=\"#/completed\"\n              className={classNames({selected: nowShowing === defs.COMPLETED_TODOS})}>\n                Completed\n            </a>\n          </li>\n        </ul>\n        {clearButton}\n      </footer>\n    )\n  }\n}","import React from 'react'\nimport classNames from 'classnames'\n\nconst ESCAPE_KEY = 27\nconst ENTER_KEY = 13\n\n\nexport default class TodoItem extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      editText: this.props.todo.title\n    }\n\n    this.editField = React.createRef()\n  }\n\n\thandleSubmit = event => {\n    const { onDestroy, onSave } = this.props\n\t\tvar val = this.state.editText.trim()\n\t\tif (val) {\n\t\t\tonSave(val)\n\t\t\tthis.setState({editText: val})\n\t\t} else {\n\t\t\tonDestroy()\n\t\t}\n\t}\n\n\thandleEdit = () => {\n    const { onEdit, todo } = this.props\n\t\tonEdit()\n\t\tthis.setState({editText: todo.title})\n\t}\n\n\thandleKeyDown = event => {\n    const { onCancel, todo } = this.props\n\t\tif (event.which === ESCAPE_KEY) {\n\t\t\tthis.setState({editText: todo.title})\n\t\t\tonCancel(event)\n\t\t} else if (event.which === ENTER_KEY) {\n\t\t\tthis.handleSubmit(event)\n\t\t}\n\t}\n\n\thandleChange = event => {\n\t\tif (this.props.editing) {\n\t\t\tthis.setState({editText: event.target.value})\n\t\t}\n\t}\n\n\t/**\n\t * This is a completely optional performance enhancement that you can\n\t * implement on any React component. If you were to delete this method\n\t * the app would still work correctly (and still be very performant!), we\n\t * just use it as an example of how little code it takes to get an order\n\t * of magnitude performance improvement.\n\t */\n\tshouldComponentUpdate = (nextProps, nextState) => {\n\t\treturn (\n\t\t\tnextProps.todo !== this.props.todo ||\n\t\t\tnextProps.editing !== this.props.editing ||\n\t\t\tnextState.editText !== this.state.editText\n\t\t)\n\t}\n\n\t/**\n\t * Safely manipulate the DOM after updating the state when invoking\n\t * `this.props.onEdit()` in the `handleEdit` method above.\n\t * For more info refer to notes at https://facebook.github.io/react/docs/component-api.html#setstate\n\t * and https://facebook.github.io/react/docs/component-specs.html#updating-componentdidupdate\n\t */\n\tcomponentDidUpdate = prevProps => {\n\t\tif (!prevProps.editing && this.props.editing) {\n\t\t\tconst node = this.editField.current\n\t\t\tnode.focus()\n\t\t\tnode.setSelectionRange(node.value.length, node.value.length)\n\t\t}\n\t}\n\n\trender() {\n    const { editing, onDestroy, onToggle, todo } = this.props\n    const { editText } = this.state\n\t\treturn (\n\t\t\t<li className={classNames({\n\t\t\t\tcompleted: todo.completed,\n\t\t\t\tediting,\n\t\t\t})}>\n\t\t\t\t<div className=\"view\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"toggle\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\t\tonChange={onToggle}\n\t\t\t\t\t/>\n\t\t\t\t\t<label onDoubleClick={this.handleEdit}>\n\t\t\t\t\t\t{todo.title}\n\t\t\t\t\t</label>\n\t\t\t\t\t<button className=\"destroy\" onClick={onDestroy} />\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tref={this.editField}\n\t\t\t\t\tclassName=\"edit\"\n\t\t\t\t\tvalue={editText}\n\t\t\t\t\tonBlur={this.handleSubmit}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\t/>\n\t\t\t</li>\n\t\t)\n\t}\n}","import React from 'react'\nimport { createBrowserHistory } from 'history'\n\nimport defs from './defs'\nimport TodoFooter from './TodoFooter'\nimport TodoItem from './TodoItem'\n\nconst ENTER_KEY = 13\nconst history = createBrowserHistory()\n\nexport default class TodoApp extends React.Component {\n  state = {\n    nowShowing: defs.ALL_TODOS,\n    editing: null,\n    newTodo: '',\n  }\n\n  componentDidMount() {\n    const setNowShowingFn = nowShowing => () => this.setState({ nowShowing })\n\n    const routes = {\n      '/': setNowShowingFn(defs.ALL_TODOS),\n      '/active': setNowShowingFn(defs.ACTIVE_TODOS),\n      '/completed': setNowShowingFn(defs.COMPLETED_TODOS),\n    }\n\n    const processLocationHash = hash => {\n      if (hash) {\n        hash = hash.substring(1)\n      }\n      const route = routes[hash] || routes['/']\n      route()\n    }\n\n    processLocationHash(history.location.hash)\n\n    history.listen((location, action) =>\n      processLocationHash(location.hash)\n    )\n  }\n\n  handleChange = event =>\n    this.setState({ newTodo: event.target.value })\n\n  handleNewTodoKeyDown = event => {\n    if (event.keyCode !== ENTER_KEY) {\n      return\n    }\n\n    event.preventDefault()\n\n    const val = this.state.newTodo.trim()\n\n    if (val) {\n      this.props.model.addTodo(val)\n      this.setState({ newTodo: '' })\n    }\n  }\n\n  toggleAll = event => {\n    const checked = event.target.checked\n    this.props.model.toggleAll(checked)\n  }\n\n  toggle = todoToToggle =>\n    this.props.model.toggle(todoToToggle)\n\n  destroy = todo =>\n    this.props.model.destroy(todo)\n\n  edit = todo =>\n    this.setState({ editing: todo.uid })\n\n  save = (todoToSave, text) => {\n    this.props.model.save(todoToSave, text)\n    this.setState({ editing: null })\n  }\n\n  cancel = () =>\n    this.setState({ editing: null })\n\n  clearCompleted = () =>\n    this.props.model.clearCompleted()\n\n  render() {\n    const { todos } = this.props.model\n    const { editing, newTodo } = this.state\n\n    const shownTodos = todos.filter(todo => {\n      switch (this.state.nowShowing) {\n        case defs.ACTIVE_TODOS:\n          return !todo.completed\n        case defs.COMPLETED_TODOS:\n          return todo.completed\n        default:\n          return true\n      }\n    })\n\n    const todoItems = shownTodos.map(todo => (\n      <TodoItem\n        key={todo.uid}\n        todo={todo}\n        onToggle={() => this.toggle(todo)}\n        onDestroy={() => this.destroy(todo)}\n        onEdit={() => this.edit(todo)}\n        editing={editing === todo.uid}\n        onSave={text => this.save(todo, text)}\n        onCancel={this.cancel}\n      />\n    ))\n\n    const activeTodoCount = todos.reduce(function (accum, todo) {\n      return todo.completed ? accum : accum + 1\n    }, 0)\n\n    const completedCount = todos.length - activeTodoCount\n\n    const footer = (activeTodoCount || completedCount)\n      ? <TodoFooter\n          count={activeTodoCount}\n          completedCount={completedCount}\n          nowShowing={this.state.nowShowing}\n          onClearCompleted={this.clearCompleted}\n        />\n      : null\n\n    const main = !todos.length\n      ? null\n      : (\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            onChange={this.toggleAll}\n            checked={activeTodoCount === 0}\n          />\n          <label\n            htmlFor=\"toggle-all\"\n          />\n          <ul className=\"todo-list\">\n            {todoItems}\n          </ul>\n        </section>\n      )\n\n    return (\n      <div>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onKeyDown={this.handleNewTodoKeyDown}\n            onChange={this.handleChange}\n            autoFocus={true}\n          />\n        </header>\n        {main}\n        {footer}\n      </div>\n    )\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'todomvc-app-css/index.css'\n\nimport TodoApp from './TodoApp'\nimport TodoModel from './TodoModel'\n\nconst model = new TodoModel()\n\nfunction render() {\n  ReactDOM.render(\n    <TodoApp model={model}/>,\n    document.getElementById('root'),\n  )\n}\n\nmodel.subscribe(render)\nrender()","import * as dgraph from 'dgraph-js-http'\n\nexport default class TodoModel {\n  constructor() {\n    const clientStub = new dgraph.DgraphClientStub(\"http://localhost:8080\")\n    this.dgraph = new dgraph.DgraphClient(clientStub)\n\n    this.todos = []\n    this.fetchAndInform()\n  }\n\n  async fetchAndInform() {\n    this.todos = await this.fetchTodos()\n\n    this.todos.forEach(Object.freeze)\n    Object.freeze(this.todos)\n\n    this.inform()\n  }\n\n  async fetchTodos() {\n    const query = `{\n      todos(func: has(is_todo))\n      {\n        uid\n        title\n        completed\n      }\n    }`\n    const res = await this.dgraph.newTxn().query(query)\n    return res.data.todos || []\n  }\n\n\tonChanges = []\n\n\tsubscribe = onChange =>\n\t\tthis.onChanges.push(onChange)\n\n\tinform = () => {\n\t\tthis.onChanges.forEach(cb => cb())\n\t}\n\n  async addTodo(title) {\n    try {\n      const res = await this.dgraph.newTxn().mutate({\n        setJson: {\n          uid: \"_:newTodo\",\n          is_todo: true,\n          title,\n          completed: false,\n        },\n        commitNow: true,\n      })\n\n      console.info('Created new todo with uid', res.data.uids.newTodo)\n    } catch (error) {\n      alert('Database write failed!')\n      console.error('Network error', error)\n    } finally {\n      this.fetchAndInform()\n    }\n\t}\n\n\tasync toggleAll(completed) {\n    try {\n      const toggleJson = this.todos\n          .map(({ uid }) => ({ uid, completed }))\n\n      await this.dgraph.newTxn().mutate({\n        setJson: toggleJson,\n        commitNow: true,\n      })\n    } catch (error) {\n      console.error('Network error', error)\n    } finally {\n      this.fetchAndInform()\n    }\n\n\t}\n\n\tasync toggle(todoToToggle) {\n    try {\n      await this.dgraph.newTxn().mutate({\n        setJson: {\n          uid: todoToToggle.uid,\n          completed: !todoToToggle.completed,\n        },\n        commitNow: true,\n      })\n    } catch (error) {\n      console.error('Network error', error)\n    } finally {\n      this.fetchAndInform()\n    }\n\t}\n\n  async destroy(todo) {\n    try {\n      await this.dgraph.newTxn().mutate({\n        deleteJson: {\n          uid: todo.uid\n        },\n        commitNow: true,\n      })\n    } catch (error) {\n      alert('Database write failed!')\n      console.error('Network error', error)\n    } finally {\n      this.fetchAndInform()\n    }\n\t}\n\n\tasync save(todoToSave, newTitle) {\n    try {\n      await this.dgraph.newTxn().mutate({\n        setJson: {\n          uid: todoToSave.uid,\n          title: newTitle,\n        },\n        commitNow: true,\n      })\n    } catch (error) {\n      console.error('Network error', error)\n    } finally {\n      this.fetchAndInform()\n    }\n\t}\n\n\tasync clearCompleted() {\n    try {\n      const uidsToDelete = this.todos\n          .filter(({ completed }) => completed)\n          .map(({ uid }) => ({ uid }))\n\n      await this.dgraph.newTxn().mutate({\n        deleteJson: uidsToDelete,\n        commitNow: true,\n      })\n    } catch (error) {\n      alert('Database write failed!')\n      console.error('Network error', error)\n    } finally {\n      this.fetchAndInform()\n    }\n\t}\n}"],"sourceRoot":""}